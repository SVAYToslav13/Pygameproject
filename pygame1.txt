import pygame

if __name__ == '__main__':
    pygame.init()
    size = width, height = 1200, 800
    screen = pygame.display.set_mode(size)
    bg = pygame.image.load("images/bg.png").convert()
    icon = pygame.image.load("images/icon.png")
    pygame.display.set_icon(icon)
    fps = 20
    clock = pygame.time.Clock()
    bg_x = 0
    bullet_left = [
        pygame.image.load("images/bullet/fire_left1.png").convert_alpha(),
        pygame.image.load("images/bullet/fire_left2.png").convert_alpha()
    ]
    bullet_right = [
        pygame.image.load("images/bullet/fire_right1.png").convert_alpha(),
        pygame.image.load("images/bullet/fire_right2.png").convert_alpha()
    ]
    mag_left = pygame.image.load("images/left/mag_leftpng (1) (1).png").convert_alpha()
    mag_right = pygame.image.load("images/right/magright (1).png").convert_alpha()
    enemy = pygame.image.load("images/left/zomb_left (1).png").convert_alpha()
    player_anim_count = 0

    bg_sound = pygame.mixer.Sound("sounds/les.mp3")
    bg_sound.play()

    player_speed = 15
    player_x = 100
    player_y = 625
    bullets = []
    bullet_count = 0

    gameplay = False

    is_jump = False
    jump_count = 10

    player_pos = True
    fireball = 'right'

    enemy_timer = pygame.USEREVENT + 1
    pygame.time.set_timer(enemy_timer, 2500)
    enemy_list = []

    lab = pygame.font.Font("images/RubikBurned-Regular.ttf", 100)
    lose_lab = lab.render('Wasted', True, (255, 255, 255))
    lab_restart = pygame.font.Font("images/RubikBurned-Regular.ttf", 80)
    restart_lab = lab_restart.render('Play again', True, (255, 255, 255))
    invisible_lab_rect = restart_lab.get_rect(topleft=(380, 400))


    running = True
    while running:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False
            if event.type == enemy_timer:
                enemy_list.append(enemy.get_rect(topleft=(1215, 634)))

        pygame.mouse.set_visible(False)

        if gameplay:
            screen.blit(bg, (bg_x, 0))
            screen.blit(bg, (bg_x + 1200, 0))

            player_hit_box = mag_left.get_rect(topleft=(player_x, player_y))
            if enemy_list:
                for el, i in enumerate(enemy_list):
                    screen.blit(enemy, i)
                    i.x -= 10

                    if i.x < -10:
                        enemy_list.pop(el)
                        print('kill')

                    if player_hit_box.colliderect(i):
                        gameplay = False

            keys = pygame.key.get_pressed()
            if keys[pygame.K_LEFT]:
                screen.blit(mag_left, (player_x, player_y))
                player_pos = False
                fireball = 'left'
            elif keys[pygame.K_RIGHT]:
                screen.blit(mag_right, (player_x, player_y))
                player_pos = True
                fireball = 'right'
            else:
                if player_pos:
                    screen.blit(mag_right, (player_x, player_y))
                else:
                    screen.blit(mag_left, (player_x, player_y))

            if keys[pygame.K_LEFT] and player_x > 0:
                player_x -= player_speed
            elif keys[pygame.K_RIGHT]:
                player_x += player_speed

            if not is_jump:
                if keys[pygame.K_SPACE]:
                    is_jump = True
            else:
                if jump_count >= -10:
                    if jump_count > 0:
                        player_y -= (jump_count ** 2) / 2
                    else:
                        player_y += (jump_count ** 2) / 2
                    jump_count -= 1
                else:
                    jump_count = 10
                    is_jump = False

            if player_anim_count == 3:
                player_anim_count = 0
            else:
                player_anim_count += 1
            bg_x -= 2
            if bg_x == -1200:
                bg_x = 0
            def bullet_fly_right(screen, name):
                global bullet_right
                for el, i in enumerate(bullets):
                    if name == 'right':
                        for draw in bullet_right:
                            screen.blit(draw, (i.x, i.y))
                        i.x += 10

            def bullet_fly_left(screen, name):
                global bullet_left
                for el, i in enumerate(bullets):
                    if name == 'left':
                        for draw in bullet_left:
                            screen.blit(draw, (i.x, i.y))
                        i.x -= 10

            if keys[pygame.K_b]:
                if fireball == 'right':
                    bullets.append(bullet_right[bullet_count].get_rect(topleft=(player_x + 70, player_y + 70)))
                else:
                    bullets.append(bullet_left[bullet_count].get_rect(topleft=(player_x + -20, player_y + 70)))
                bullet_count += 1

            if bullet_count == 1:
                bullet_count = 0
            if len(bullets) <= 1:
                while len(bullets) != 0:
                    for el, i in enumerate(bullets):
                        if fireball == 'right':
                            bullet_fly_right(screen, fireball)
                        else:
                            bullet_fly_left(screen, fireball)
                        if i.x > 1210 or i.x < -20:
                            bullets.pop(el)
                        if enemy_list:
                            for index, enem in enumerate(enemy_list):
                                if i.colliderect(enem):
                                    enemy_list.pop(index)
                                    bullets.pop(el)
            clock.tick(fps)
        else:
            pygame.mouse.set_visible(True)
            screen.fill((0, 0, 0))
            screen.blit(lose_lab, (400, 300))
            screen.blit(restart_lab, invisible_lab_rect)

            mouse = pygame.mouse.get_pos()
            if invisible_lab_rect.collidepoint(mouse) and pygame.mouse.get_pressed()[0]:
                gameplay = True
                enemy_list.clear()
                bullets.clear()
                player_x = 100

        pygame.display.update()
    pygame.quit()